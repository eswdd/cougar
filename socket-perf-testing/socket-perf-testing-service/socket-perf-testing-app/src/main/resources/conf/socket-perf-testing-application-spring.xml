<!--
  ~ Copyright 2014, The Sporting Exchange Limited
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd">


    <bean class="PropertyConfigurer">
        <constructor-arg index="0" ref="disco.core.EncryptorRegistry"/>
	    <property name="defaultConfig" value="classpath:conf/socket-perf-testing-defaults.properties"/>
	    <property name="configOverride" value="overrides.properties"/>
	    <property name="placeholderPrefix" value="$PUSH{"/>
	</bean>

	<!-- define a log file -->
	<bean class="EventLogDefinition" init-method="register">
		<property name="logName" value="PUSH-ASYNC-LOG"/>
		<property name="registry" ref="eventLoggingRegistry"/>
        <property name="handler">
            <bean factory-bean="disco.core.logHandlerFactory" factory-method="registerLogHandler">
                <constructor-arg type="java.util.Map">
                    <util:map map-class="java.util.HashMap">
                        <entry key="logName" value="PUSH-ASYNC-LOG"/>
                        <entry key="fileName" value="$DISCO{disco.log.dir}/$DISCO{system.hostname}-$DISCO{disco.app.name}-async-request.log"/>
                        <entry key="flush" value="$PUSH{disco.log.PUSH-ASYNC-LOG.flush}"/>
                        <entry key="append" value="$PUSH{disco.log.PUSH-ASYNC-LOG.append}"/>
                        <entry key="rotation" value="$PUSH{disco.log.PUSH-ASYNC-LOG.rotation}"/>
                        <entry key="abstractLogger" value="false"/>
                    </util:map>
                </constructor-arg>
            </bean>
        </property>
	</bean>


    <!-- Generate the service beans -->
	<bean id="socketPerfTestingService" class="uk.co.exemel.disco.perf.socket.SocketPerfTestingServiceImpl">
        <constructor-arg ref="disco.core.MonitorRegistry"/>
        <property name="concurrency" value="$PUSH{perftest.concurrency}"/>
        <property name="numHeapsForTest" value="$PUSH{perftest.numHeapsForTest}"/>
        <property name="numUpdates" value="$PUSH{perftest.numUpdates}"/>
	</bean>



    <bean class="ServiceRegistration">
        <property name="resolver">
            <bean class="uk.co.exemel.disco.perf.socket.v1.SocketPerfTestingSyncServiceExecutableResolver">
                <property name="service" ref="socketPerfTestingService"/>
            </bean>
        </property>
        <property name="serviceDefinition">
            <bean class="uk.co.exemel.disco.perf.socket.v1.SocketPerfTestingServiceDefinition"/>
        </property>
        <property name="service" ref="socketPerfTestingService"/>
        <property name="bindingDescriptors">
            <util:set>
                <bean class="uk.co.exemel.disco.perf.socket.v1.rescript.SocketPerfTestingRescriptServiceBindingDescriptor"/>
                <bean class="uk.co.exemel.disco.perf.socket.v1.socket.SocketPerfTestingSocketServiceBindingDescriptor"/>
            </util:set>
        </property>
    </bean>

    <bean name="baselineMonitorRegistry" class="com.betfair.tornjak.monitor.DefaultMonitorRegistry">
        <property name="statusAggregator" ref="baselineStatusAggregator" />
    </bean>

    <bean name="baselineStatusAggregator" class="com.betfair.tornjak.monitor.OverallStatus">
        <property name="monitorRegistry" ref="baselineMonitorRegistry" />
    </bean>


</beans>
