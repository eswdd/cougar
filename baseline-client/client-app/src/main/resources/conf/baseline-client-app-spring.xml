<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2013, The Sporting Exchange Limited
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd">


    <bean name="asyncClient" class="com.betfair.baseline.v2.BaselineClientImpl" parent="disco.client.AbstractClient">
        <constructor-arg value="trousers-static"/>
    </bean>

    <bean name="syncClient" class="com.betfair.baseline.v2.BaselineSyncClientImpl" parent="disco.client.AbstractSyncClient">
        <constructor-arg value="trousers-static"/>
    </bean>

    <bean id="eventExecutionContext" class="uk.co.exemel.disco.api.ExecutionContextImpl"/>

    <bean id="clientIdentityResolver" class="uk.co.exemel.disco.baseline.security.GeneralIdentityResolver"/>

    <bean class="uk.co.exemel.disco.core.impl.ev.ClientServiceRegistration">
        <property name="resolver">
            <bean class="com.betfair.baseline.v2.BaselineClientExecutableResolver" init-method="init">
                <property name="defaultOperationTransport" ref="$APPLICATION{disco.client.transport}"/>
                <!--<property name="eventTransport" ref="activemqTransport"/>-->
            </bean>
        </property>
        <property name="serviceDefinition">
            <bean class="com.betfair.baseline.v2.BaselineServiceDefinition"/>
        </property>
        <property name="bindingDescriptors">
            <util:set>
                <bean class="com.betfair.baseline.v2.events.BaselineJMSServiceBindingDescriptor"/>
            </util:set>
        </property>
        <property name="namespace" value="trousers-static"/>
    </bean>

    <!-- Left here in case anyone wants to play with this stuff - happens on occasion -->
    <!-- Don't checkin with this there as it makes a mess of our tests -->
    <!-- Use one or the other flavour of sync client -->
    <!--
    <bean class="com.betfair.platform.application.DiscoToDiscoCommsTester">
        <property name="client" ref="dynClient"/>
        <property name="client" ref="syncClient"/>
    </bean>
        -->

    <!-- These are needed to test the new client factory based clients -->

    <bean name="dynClient" factory-bean="baselineClientFactory" factory-method="createSyncHttpClient">
        <constructor-arg index="0" value="$APPLICATION{disco.client.rescript.remoteaddress}"/> <!-- endpoint -->
        <constructor-arg index="1" value="trousers-dynamic"/> <!-- namespace -->
    </bean>

    <bean id="baselineClientFactory" class="com.betfair.baseline.v2.BaselineClientFactory"
          parent="discoClientFactory"/>

    <!--<bean id="eventHandler" class="com.betfair.platform.application.EventConsumer" destroy-method="destroy">-->
    <!--<property name="client" ref="asyncClient"/>-->
    <!--</bean>-->

</beans>
